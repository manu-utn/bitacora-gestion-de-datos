#+TITLE: Sql Server Linux
* Intro
  En la carpeta ~backups~ se encuentra el archivo ~7storesnew.sql~ para crear las estructuras e insertar los registros.
* Docker Compose
** Conceptos
   - La utilizaremos en conjunto con *Docker* (es necesario tenerlo instalado previamente)
   - Es la herramienta que usaremos para correr un *contenedor* en una *shell*
   - Es un tanto similar a *Virtualbox* pero más eficiente en todo sentido :)

   |------------------------+-----------------------------------------------|
   | Comando                | Descripción                                   |
   |------------------------+-----------------------------------------------|
   | ~docker-compose up -d~ | Ejecuta SQL Server en segundo plano           |
   | ~docker-compose ps~    | Listar contenedores en ejecución, y su estado |
   | ~docker-compose down~  | Detiene la ejecución del servidor             |
   |------------------------+-----------------------------------------------|

   *Observación:*
   El parámetro ~-d~ es para que el comando se ejecute en segundo plano, y no bloquee el uso de la terminal
** Configuración
   - Esta configuración ya la tenemos en el archivo ~docker-compose.yml~ pero la dejo por si acaso..
   - Si vas a cambiar la *password* estate seguro que mantenga ese nivel de seguridad
     (es un requisito al momento de instalar SQL Server, si no va a fallar a mitad de la instalación)
   - Podés obviar usar ~sqlpad~ es sólo extra, monta un servidor web para utilizar sql accediendo desde un navegador web
   - Si necesitas tener algunos archivos ~.sql~ creá la carpeta ~data~ o cambiá la configuración en ~volumes~
     la misma se creará dentro del contenedor (del sqlpad)

   *Observación:*
   Si queres acceder al servidor web ingresá en http://localhost:3000/ e ingresa los datos
   que aparecen en la configuración en *SQLPAD_ADMIN* y *SQLPAD_ADMIN_PASSWORD*

   #+BEGIN_SRC yaml
     version: '3'
     services:
       mssql:
         image: 'microsoft/mssql-server-linux:2017-latest'
         hostname: 'mssql'
         ports:
           - 1433:1433
         environment:
           - ACCEPT_EULA=Y
           - MSSQL_SA_PASSWORD=SuperP4ssw0rd! # si vas a cambiarla, estate seguro que mantenga este nivel de seguridad
           - MSSQL_PID=Express
         networks:
           - redsql
       sqlpad:
         image: sqlpad/sqlpad:5
         hostname: 'sqlpad'
         ports:
           - '3000:3000'
         environment:
           SQLPAD_ADMIN: 'admin'
           SQLPAD_ADMIN_PASSWORD: '123123'
           SQLPAD_APP_LOG_LEVEL: info
           SQLPAD_WEB_LOG_LEVEL: warn
           SQLPAD_CONNECTIONS__sqlserverdemo__name: SQL Server Demo
           SQLPAD_CONNECTIONS__sqlserverdemo__driver: sqlserver
           SQLPAD_CONNECTIONS__sqlserverdemo__host: mssql
           SQLPAD_CONNECTIONS__sqlserverdemo__database: master
           SQLPAD_CONNECTIONS__sqlserverdemo__username: sa
           SQLPAD_CONNECTIONS__sqlserverdemo__password: SuperP4ssw0rd!
         volumes:
           # el directorio "data" tiene que estar en la misma ruta
           # que este archivo Docker-compose.yml
           - ./data:/var/lib/sqlpad
         networks:
           - redsql

     networks:
       redsql:
         name: "redsql"
         driver: "bridge"
   #+END_SRC
** Referencias
   1. https://github.com/sqlpad/sqlpad
   2. https://hub.docker.com/r/microsoft/mssql-server-linux/
   3. https://docs.microsoft.com/en-us/sql/linux/quickstart-install-connect-docker
* DBeaver
** Conceptos
   - Es el programa que usaremos para gestionar nuestras base de datos en linux
** Configuración
  Algunas de las configuraciones que vamos a necesitar son

  |-----------------+----------------------------|
  | Configuración   | Valor                      |
  |-----------------+----------------------------|
  | Host            | localhost                  |
  | Port            | 1433                       |
  | Database/Schema | master                     |
  | Authentication  | SQL Server Authentication  |
  | User name       | sa                         |
  | Password        | SuperP4ssw0rd!             |
  | Driver name     | MS SQL Server / SQL Server |
  |-----------------+----------------------------|
** Problemas Comunes
*** Archlinux - No me instala con pacman -S
    Una posible solución podría ser

    #+BEGIN_SRC shell
      # 1. Descarga el package desde el gestor de paquetes de la comuunidad arch
      # Link: https://archlinux.org/packages/community/x86_64/dbeaver/download/

      # 2. Instalalo con pacman
      # Obs: si tenés otra versión cambiale el nombre..
      sudo pacman -U ~/Descargas/dbeaver-21.1.0-1-x86_64.pkg.tar.zst
    #+END_SRC
*** Java - Mi versión de java es vieja
    Quizás por alguna materia estés necesitando usar una versión vieja
    que no es compatible con el *DBeaver*.

   #+BEGIN_SRC shell
     # 1. Chequeamos la versión actual
     # (la que estamos usando dirá default al final)
     archlinux-java status

     # 2. Cambiamos a la última version
     # (en mi caso tenia la 15, pero cambiá a la que tengas más reciente)
     sudo archlinux-java set java-15-openjdk
   #+END_SRC
** Referencias
   1. https://dbeaver.io/
   2. https://archlinux.org/packages/community/x86_64/dbeaver/
